{"version":3,"file":"index.js","sources":["../src/components/round.ts","../src/hooks/useMedia.tsx","../src/components/seed.ts","../src/utils/renders.tsx","../src/brackets/index.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport { ISeedProps } from '../types/Seed';\n\nexport const Bracket = styled.div<ISeedProps>(\n  (props) => `\n  display: flex;\n  flex-direction: row;\n  @media (max-width: ${props.mobileBreakpoint}px) {\n    flex-direction: column;\n  }\n  `\n);\n\nexport const Round = styled.div<ISeedProps>(\n  (props) => `\n  flex: 0;\n  // min-width:300px;\n  display:flex;\n  flex-direction:column;\n  @media (max-width: ${props.mobileBreakpoint}px) {\n    min-width:0;\n  }\n  `\n);\n\nexport const RoundTitle = styled.div`\n  color: #8f8f8f;\n  font-weight: 400;\n  text-align: center;\n`;\n\nexport const SeedsList = styled.div`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  flex-flow: row wrap;\n  justify-content: center;\n  height: 100%;\n  list-style: none;\n`;\n","import { useState, useEffect } from 'react';\n\nexport default function useMedia(breakPoint: number) {\n  // checking window object to support server side rendering.\n  const [isSmaller, setIsSmaller] = useState(typeof window !== 'undefined' ? window.innerWidth <= breakPoint : false);\n\n  useEffect(() => {\n    function screenResized() {\n      // To make sure that the state is only being updated when it has to be\n      if (isSmaller && window.innerWidth > breakPoint) {\n        setIsSmaller(false);\n      } else if (!isSmaller && window.innerWidth <= breakPoint) {\n        setIsSmaller(true);\n      }\n    }\n    if (typeof window !== 'undefined') window.addEventListener('resize', screenResized);\n\n    // to remove the event listener when this component is unmounted.\n    return () => {\n      if (typeof window !== 'undefined') window.removeEventListener('resize', screenResized);\n    };\n  }, [isSmaller]);\n\n  // the return value should be true or false\n  return isSmaller;\n}\n","import styled from 'styled-components';\nimport { ISeedProps } from '../types/Seed';\n\nexport const SeedItem = styled.div`\n  color: #fff;\n  width: 100%;\n  background-color: #1a1d2e;\n  padding: 0;\n  border-radius: 0.2em;\n  box-shadow: 0 2px 4px -2px #111630;\n  text-align: center;\n  position: relative;\n`;\n\nexport const SeedTeam = styled.div`\n  padding: 0.3rem 0.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 0.2em;\n  align-items: center;\n`;\n\nexport const SeedTime = styled.div<ISeedProps>(\n  (props) => `\nmargin-top: 2px;\nfont-size: 12px;\ncolor: #8f8f8f;\nheight: 0;\n@media (max-width: ${props.mobileBreakpoint}px) {\n  height:auto;\n}\n`\n);\n\n/*\n * Difference between \"SingleLineSeed\" and \"Seed\" is that single line seed\n * will directly connect to the next node, it's good for double elimination losing brackets.\n *\n * The best behavior in such case is, to check if the next round seeds matches the current round seeds\n */\n\nexport const SingleLineSeed = styled.div<ISeedProps>(\n  (props) => `\npadding: 1em 1.5em;\nmin-width: 225px;\nwidth:100%;\nposition: relative;\ndisplay: flex;\nalign-items: center;\nflex: 0 1 auto;\nflex-direction: column;\njustify-content: center;\nfont-size: 14px;\n@media (max-width: ${props.mobileBreakpoint}px) {\n  width:100%;\n}\n@media (min-width: ${(props.mobileBreakpoint || 0) + 1}px) {\n  &::after {\n      content: \"\";\n      position: absolute;\n      height: 50%;\n      width: 3em;\n    [dir=\"rtl\"] & {\n      left: -1.5em;\n    }\n    [dir=\"ltr\"] & {\n      right: -1.5em;\n    }\n  }\n  &:nth-child(even)::after {\n    border-bottom: 1px solid #707070;\n    top: -0.5px;\n  }\n  &:nth-child(odd)::after {\n    border-top: 1px solid #707070;\n    top: calc(50% - 0.5px);\n  }\n}\n`\n);\n\nexport const Seed = styled.div<ISeedProps>(\n  (props) => `\n  padding: 1em 1.5em;\n  min-width: 225px;\n  width:100%;\n  position: relative;\n  display: flex;\n  align-items: center;\n  flex: 0 1 auto;\n  flex-direction: column;\n  justify-content: center;\n  font-size: 14px;\n  @media (max-width: ${props.mobileBreakpoint}px) {\n    width:100%;\n  }\n  @media (min-width: ${(props.mobileBreakpoint || 0) + 1}px) {\n    &::after {\n        content: \"\";\n        position: absolute;\n        height: 50%;\n        width: 1.5em;\n      [dir=\"rtl\"] & {\n        left: 0px;\n      }\n      [dir=\"ltr\"] & {\n        right: 0px;\n      }\n    }\n\n    &:nth-child(even)::before{\n      content:'';\n      border-top: 1px solid #707070;\n      position:absolute;\n      top: -0.5px;\n      width:1.5em;\n      [dir=\"rtl\"] & {\n        left:-1.5em;\n        }\n      [dir=\"ltr\"] & {\n        right:-1.5em;\n      }\n    }\n\n    &:nth-child(even)::after {\n      border-bottom: 1px solid #707070;\n      top: -0.5px;\n     [dir=\"rtl\"] & {\n        border-left: 1px solid #707070;\n        }\n      [dir=\"ltr\"] & {\n        border-right: 1px solid #707070;\n      }\n    }\n    &:nth-child(odd):not(:last-child)::after {\n      border-top: 1px solid #707070;\n      top: calc(50% - 0.5px);\n      [dir=\"rtl\"] & {\n        border-left: 1px solid #707070;\n        }\n      [dir=\"ltr\"] & {\n        border-right: 1px solid #707070;\n      }\n    }\n}\n`\n);\n","import React from 'react';\nimport { Seed, SeedItem, SeedTeam, SeedTime } from '../components/seed';\nimport { RoundTitle } from '../components/round';\nimport { IRenderSeedProps } from '../types/Seed';\n\n/* ------------------------- default title component ------------------------ */\nexport const renderTitle = (title: string | JSX.Element) => <RoundTitle>{title}</RoundTitle>;\n\n/* ------------------------- default seed component ------------------------- */\nexport const renderSeed = ({ seed, breakpoint }: IRenderSeedProps) => {\n  return (\n    <Seed mobileBreakpoint={breakpoint}>\n      <SeedItem>\n        <div>\n          <SeedTeam>{seed.teams?.[0]?.name || '-----------'}</SeedTeam>\n          <SeedTeam>{seed.teams?.[1]?.name || '-----------'}</SeedTeam>\n        </div>\n      </SeedItem>\n      <SeedTime mobileBreakpoint={breakpoint}>{seed?.date}</SeedTime>\n    </Seed>\n  );\n};\n","import React, { Fragment } from 'react';\nimport { Round, Bracket, SeedsList } from '../components/round';\nimport SwipeableViews from 'react-swipeable-views';\nimport useMedia from '../hooks/useMedia';\nimport { renderSeed, renderTitle } from '../utils/renders';\nimport { ISingleEliminationProps } from '../types/SingleElimination';\n\nconst SingleElimination = ({\n  rounds,\n  rtl = false,\n  roundClassName,\n  bracketClassName,\n  swipeableProps = {},\n  mobileBreakpoint = 992,\n  renderSeedComponent = renderSeed,\n  roundTitleComponent = renderTitle,\n}: ISingleEliminationProps) => {\n  // Checking responsive size\n  const isResponsive = useMedia(mobileBreakpoint);\n\n  const data = rounds.map((round, roundIdx) => (\n    <Round key={round.title} className={roundClassName} mobileBreakpoint={mobileBreakpoint}>\n      {round.title && roundTitleComponent(round.title, roundIdx)}\n      <SeedsList>\n        {round.seeds.map((seed, idx) => {\n          return (\n            <Fragment key={seed.id}>\n              {renderSeedComponent({\n                seed,\n                breakpoint: mobileBreakpoint,\n                roundIndex: roundIdx,\n                seedIndex: idx,\n                rounds,\n              })}\n            </Fragment>\n          );\n        })}\n      </SeedsList>\n    </Round>\n  ));\n\n  if (isResponsive) {\n    // Since SwipeableViewsProps have an issue that it uses ref inside of it, We need to remove ref from the object\n    const { ref, ...rest } = swipeableProps;\n    return (\n      <Bracket className={bracketClassName} dir={rtl ? 'rtl' : 'ltr'} mobileBreakpoint={mobileBreakpoint}>\n        <SwipeableViews style={{ minHeight: '500px' }} axis={rtl ? 'x-reverse' : 'x'} {...rest}>\n          {data}\n        </SwipeableViews>\n      </Bracket>\n    );\n  }\n  return (\n    <Bracket className={bracketClassName} dir={rtl ? 'rtl' : 'ltr'} mobileBreakpoint={mobileBreakpoint}>\n      {data}\n    </Bracket>\n  );\n};\n\nexport { SingleElimination };\n"],"names":["Bracket","styled","div","props","mobileBreakpoint","Round","RoundTitle","SeedsList","useMedia","breakPoint","useState","window","innerWidth","isSmaller","setIsSmaller","useEffect","screenResized","addEventListener","removeEventListener","SeedItem","SeedTeam","SeedTime","SingleLineSeed","Seed","renderTitle","title","React","renderSeed","seed","breakpoint","teams","name","date","SingleElimination","rounds","rtl","roundClassName","bracketClassName","swipeableProps","renderSeedComponent","roundTitleComponent","isResponsive","data","map","round","roundIdx","key","className","seeds","idx","Fragment","id","roundIndex","seedIndex","rest","dir","SwipeableViews","style","minHeight","axis"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,IAAMA,OAAO,GAAGC,MAAM,CAACC,GAAP,CACrB,UAACC,KAAD;EAAA,6EAGqBA,KAAK,CAACC,gBAH3B;AAAA,CADqB,CAAhB;AAUA,IAAMC,KAAK,GAAGJ,MAAM,CAACC,GAAP,CACnB,UAACC,KAAD;EAAA,iHAKqBA,KAAK,CAACC,gBAL3B;AAAA,CADmB,CAAd;AAYA,IAAME,UAAU,GAAGL,MAAM,CAACC,GAAV,2IAAhB;AAMA,IAAMK,SAAS,GAAGN,MAAM,CAACC,GAAV,kPAAf;;SC7BiBM,SAASC;EAE/B,gBAAkCC,cAAQ,CAAC,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAM,CAACC,UAAP,IAAqBH,UAArD,GAAkE,KAAnE,CAA1C;MAAOI,SAAP;MAAkBC,YAAlB;;EAEAC,eAAS,CAAC;IACR,SAASC,aAAT;MAEE,IAAIH,SAAS,IAAIF,MAAM,CAACC,UAAP,GAAoBH,UAArC,EAAiD;QAC/CK,YAAY,CAAC,KAAD,CAAZ;OADF,MAEO,IAAI,CAACD,SAAD,IAAcF,MAAM,CAACC,UAAP,IAAqBH,UAAvC,EAAmD;QACxDK,YAAY,CAAC,IAAD,CAAZ;;;;IAGJ,IAAI,OAAOH,MAAP,KAAkB,WAAtB,EAAmCA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCD,aAAlC;IAGnC,OAAO;MACL,IAAI,OAAOL,MAAP,KAAkB,WAAtB,EAAmCA,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCF,aAArC;KADrC;GAZO,EAeN,CAACH,SAAD,CAfM,CAAT;EAkBA,OAAOA,SAAP;AACD;;;ICtBYM,QAAQ,GAAGlB,MAAM,CAACC,GAAV,2QAAd;AAWP,IAAakB,QAAQ,GAAGnB,MAAM,CAACC,GAAV,2OAAd;AASP,IAAamB,QAAQ,GAAGpB,MAAM,CAACC,GAAP,CACtB,UAACC,KAAD;EAAA,kGAKmBA,KAAK,CAACC,gBALzB;AAAA,CADsB,CAAjB;AAmBP,IAAakB,cAAc,GAAGrB,MAAM,CAACC,GAAP,CAC5B,UAACC,KAAD;EAAA,uOAWmBA,KAAK,CAACC,gBAXzB,qDAcmB,CAACD,KAAK,CAACC,gBAAN,IAA0B,CAA3B,IAAgC,CAdnD;AAAA,CAD4B,CAAvB;AAwCP,IAAamB,IAAI,GAAGtB,MAAM,CAACC,GAAP,CAClB,UAACC,KAAD;EAAA,6PAWqBA,KAAK,CAACC,gBAX3B,2DAcqB,CAACD,KAAK,CAACC,gBAAN,IAA0B,CAA3B,IAAgC,CAdrD;AAAA,CADkB,CAAb;;AC5EA,IAAMoB,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;EAAA,OAAiCC,4BAAA,CAACpB,UAAD,MAAA,EAAamB,KAAb,CAAjC;AAAA,CAApB;AAGP,AAAO,IAAME,UAAU,GAAG,SAAbA,UAAa;;;MAAGC,YAAAA;MAAMC,kBAAAA;EACjC,OACEH,4BAAA,CAACH,IAAD;IAAMnB,gBAAgB,EAAEyB;GAAxB,EACEH,4BAAA,CAACP,QAAD,MAAA,EACEO,4BAAA,MAAA,MAAA,EACEA,4BAAA,CAACN,QAAD,MAAA,EAAW,gBAAAQ,IAAI,CAACE,KAAL,4EAAa,CAAb,+DAAiBC,IAAjB,KAAyB,aAApC,CADF,EAEEL,4BAAA,CAACN,QAAD,MAAA,EAAW,iBAAAQ,IAAI,CAACE,KAAL,+EAAa,CAAb,iEAAiBC,IAAjB,KAAyB,aAApC,CAFF,CADF,CADF,EAOEL,4BAAA,CAACL,QAAD;IAAUjB,gBAAgB,EAAEyB;GAA5B,EAAyCD,IAAzC,aAAyCA,IAAzC,uBAAyCA,IAAI,CAAEI,IAA/C,CAPF,CADF;AAWD,CAZM;;;ACTP;AAOA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;MACxBC,cAAAA;sBACAC;MAAAA,4BAAM;MACNC,sBAAAA;MACAC,wBAAAA;iCACAC;MAAAA,kDAAiB;mCACjBlC;MAAAA,sDAAmB;mCACnBmC;MAAAA,yDAAsBZ;mCACtBa;MAAAA,yDAAsBhB;EAGtB,IAAMiB,YAAY,GAAGjC,QAAQ,CAACJ,gBAAD,CAA7B;EAEA,IAAMsC,IAAI,GAAGR,MAAM,CAACS,GAAP,CAAW,UAACC,KAAD,EAAQC,QAAR;IAAA,OACtBnB,4BAAA,CAACrB,KAAD;MAAOyC,GAAG,EAAEF,KAAK,CAACnB;MAAOsB,SAAS,EAAEX;MAAgBhC,gBAAgB,EAAEA;KAAtE,EACGwC,KAAK,CAACnB,KAAN,IAAee,mBAAmB,CAACI,KAAK,CAACnB,KAAP,EAAcoB,QAAd,CADrC,EAEEnB,4BAAA,CAACnB,SAAD,MAAA,EACGqC,KAAK,CAACI,KAAN,CAAYL,GAAZ,CAAgB,UAACf,IAAD,EAAOqB,GAAP;MACf,OACEvB,4BAAA,CAACwB,cAAD;QAAUJ,GAAG,EAAElB,IAAI,CAACuB;OAApB,EACGZ,mBAAmB,CAAC;QACnBX,IAAI,EAAJA,IADmB;QAEnBC,UAAU,EAAEzB,gBAFO;QAGnBgD,UAAU,EAAEP,QAHO;QAInBQ,SAAS,EAAEJ,GAJQ;QAKnBf,MAAM,EAANA;OALkB,CADtB,CADF;KADD,CADH,CAFF,CADsB;GAAX,CAAb;;EAqBA,IAAIO,YAAJ,EAAkB;IAEhB,IAAgBa,IAAhB,iCAAyBhB,cAAzB;;IACA,OACEZ,4BAAA,CAAC1B,OAAD;MAAS+C,SAAS,EAAEV;MAAkBkB,GAAG,EAAEpB,GAAG,GAAG,KAAH,GAAW;MAAO/B,gBAAgB,EAAEA;KAAlF,EACEsB,4BAAA,CAAC8B,cAAD;MAAgBC,KAAK,EAAE;QAAEC,SAAS,EAAE;;MAAWC,IAAI,EAAExB,GAAG,GAAG,WAAH,GAAiB;OAASmB,KAAlF,EACGZ,IADH,CADF,CADF;;;EAQF,OACEhB,4BAAA,CAAC1B,OAAD;IAAS+C,SAAS,EAAEV;IAAkBkB,GAAG,EAAEpB,GAAG,GAAG,KAAH,GAAW;IAAO/B,gBAAgB,EAAEA;GAAlF,EACGsC,IADH,CADF;AAKD,CAlDD;;;;;;;;;"}